<?xml version="1.0" encoding="UTF-8"?>

<!-- https://phpunit.readthedocs.io/en/latest/configuration.html -->
<phpunit xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:noNamespaceSchemaLocation="vendor/phpunit/phpunit/phpunit.xsd"
         backupGlobals="false"
         colors="true"
         bootstrap="tests/bootstrap.php"
         convertDeprecationsToExceptions="false"
>
    <php>
        <ini name="display_errors" value="1" />
        <ini name="error_reporting" value="-1" />
        <server name="APP_ENV" value="test" force="true" />
        <server name="SHELL_VERBOSITY" value="-1" />
        <server name="SYMFONY_PHPUNIT_REMOVE" value="" />
        <server name="SYMFONY_PHPUNIT_VERSION" value="9.5" />

        <!-- after example in api platform core for GitHub Actions to work properly -->
        <server name="SYMFONY_PHPUNIT_DIR" value="vendor/bin/.phpunit" />
        <server name="SYMFONY_PHPUNIT_REMOVE" value="symfony/yaml" />
        <server name="KERNEL_DIR" value="src" />
        <server name="KERNEL_CLASS" value="App\Kernel" />
    </php>

    <testsuites>
        <testsuite name="Project Test Suite">
            <directory>tests</directory>
        </testsuite>
        <testsuite name="FilterBundle Test Suite">
            <directory>vendor/metaclass-nl/filter-bundle/tests</directory>
        </testsuite>
    </testsuites>

    <coverage processUncoveredFiles="true">
        <include>
            <directory suffix=".php">vendor/metaclass-nl/filter-bundle/src</directory>
        </include>
    </coverage>

    <listeners>
        <listener class="Symfony\Bridge\PhpUnit\SymfonyTestsListener" />
    </listeners>

    <!-- Run `composer require symfony/panther` before enabling this extension -->
    <!--
    <extensions>
        <extension class="Symfony\Component\Panther\ServerExtension" />
    </extensions>
    -->
    <logging>
        <testdoxHtml outputFile="var/log/phpunit/testdox.html"/>
        <testdoxText outputFile="var/log/phpunit/testdox.txt"/>
        <text outputFile="var/log/phpunit/logfile.txt"/>
        <!--
        <junit outputFile="var/log/junit.xml"/>
        <teamcity outputFile="var/log/teamcity.txt"/>
        <testdoxXml outputFile="var/log/testdox.xml"/>
        -->
    </logging>
</phpunit>
